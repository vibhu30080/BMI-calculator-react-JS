{"version":3,"sources":["Components/Metric.jsx","Components/Imperial.jsx","App.js","index.js"],"names":["Metric","props","calculate","bmi1","state","weight","height","toFixed","setState","result","bmiIndex","bmi","handleheight","e","target","value","handleweight","className","this","type","id","onChange","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef041fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Component.css\"\r\n\r\nexport default class Metric extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height:\"\",\r\n            weight:\"\",\r\n            result:\"\",\r\n            bmi:\"\"\r\n        }\r\n    }\r\n    \r\n    calculate = () =>{\r\n        \r\n        let bmi = this.state.weight/this.state.height/this.state.height;\r\n        let bmi1 = bmi.toFixed(3);\r\n        this.setState({result: bmi1});\r\n        this.bmiIndex(bmi1);\r\n\r\n    };\r\n    bmiIndex = (bmi) =>{\r\n        if(bmi<18.5){\r\n            this.setState({bmi:\" You are  UNDER-WEIGHT\"});\r\n        }\r\n        if(bmi>=18.5 && bmi<25){\r\n            this.setState({bmi:\" You are  Normal-WEIGHT\"});\r\n        }\r\n        if(bmi>=25 && bmi<30){\r\n            this.setState({bmi:\" You are  Over-WEIGHT\"});\r\n        }\r\n        if(bmi>=30){\r\n            this.setState({bmi:\" You are  Obese\"});\r\n        }\r\n    };\r\n\r\n    handleheight = (e) =>{\r\n        this.setState({height : e.target.value})\r\n    };\r\n\r\n    handleweight = (e) =>{\r\n        this.setState({weight : e.target.value})\r\n    };\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"calculator_body\">\r\n                    <div className=\"result\">\r\n                       Your BMI is: {\"   \"}\r\n                       <span className=\"display\">{this.state.result}</span>\r\n                    </div>\r\n                    <div className=\"category\">\r\n                       BMI Category: {\"   \"}\r\n                       <span className=\"display\">{this.state.bmi}</span>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"input_field\">\r\n                            <form>\r\n                                <label>\r\n                                    Height (in mtrs):\r\n                                    <input type=\"number\" id=\"height\" value={this.state.height} onChange={this.handleheight} />\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"input_field\">\r\n                            <form>\r\n                                <label>\r\n                                    Weight (in Kgs):\r\n                                    <input type=\"number\" value={this.state.weight} onChange={this.handleweight} />\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <button className=\"calculate_btn\" onClick={this.calculate}>\r\n                            CALCULATE\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Component.css\"\r\n\r\nexport default class Metric extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            height:\"\",\r\n            weight:\"\",\r\n            result:\"\",\r\n            bmi:\"\"\r\n        }\r\n    }\r\n    \r\n    calculate = () =>{\r\n        \r\n        let x = this.state.weight/this.state.height/this.state.height;\r\n        let bmi = x*703;\r\n        let bmi1 = bmi.toFixed(3);\r\n        this.setState({result: bmi1});\r\n        this.bmiIndex(bmi1);\r\n    };\r\n\r\n    bmiIndex = (bmi) =>{\r\n        if(bmi<18.5){\r\n            this.setState({bmi:\" You are  UNDER-WEIGHT\"});\r\n        }\r\n        if(bmi>=18.5 && bmi<25){\r\n            this.setState({bmi:\" You are  Normal-WEIGHT\"});\r\n        }\r\n        if(bmi>=25 && bmi<30){\r\n            this.setState({bmi:\" You are  Over-WEIGHT\"});\r\n        }\r\n        if(bmi>=30){\r\n            this.setState({bmi:\" You are  Obese\"});\r\n        }\r\n    };\r\n\r\n    handleheight = (e) =>{\r\n        this.setState({height : e.target.value})\r\n    };\r\n\r\n    handleweight = (e) =>{\r\n        this.setState({weight : e.target.value})\r\n    };\r\n   \r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"calculator_body\">\r\n                    <div className=\"result\">\r\n                       Your BMI is: {\"   \"}\r\n                       <span className=\"display\">{this.state.result}</span>\r\n                    </div>\r\n                    <div className=\"category\">\r\n                       BMI Category: {\"   \"}\r\n                       <span className=\"display\">{this.state.bmi}</span>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"input_field\">\r\n                            <form>\r\n                                <label>\r\n                                    Height (in inches):\r\n                                    <input type=\"number\" id=\"height\" value={this.state.height} onChange={this.handleheight} />\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"input_field\">\r\n                            <form>\r\n                                <label>\r\n                                    Weight (in Lbs):\r\n                                    <input type=\"number\" value={this.state.weight} onChange={this.handleweight} />\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <button className=\"calculate_btn\" onClick={this.calculate}>\r\n                            CALCULATE\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useState} from 'react';\nimport Metric from \"./Components/Metric\";\nimport Imperial from \"./Components/Imperial\";\nimport './App.css';\nimport {Tabs, TabList, TabPanel} from 'react-tabs';\nimport {Tab} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport 'react-tabs/style/react-tabs.css';\n\nexport default class App extends React.Component{\n \n  render(){\n    return(\n      <div>\n      <h1>BMI Calculator</h1>\n      <Tabs>\n        <TabList>\n          <Tab>Metric</Tab>\n          <Tab>Imperial</Tab>\n        </TabList>\n\n        <TabPanel>\n          <h2>Metric System</h2>\n          <Metric  />\n        </TabPanel>\n        <TabPanel>\n          <h2>Imperial System</h2>\n          <Imperial  />\n        </TabPanel>\n      </Tabs>\n      <footer className=\"footer\">Made by Vibhor Khanna in 2020</footer>\n  </div>\n    );\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}